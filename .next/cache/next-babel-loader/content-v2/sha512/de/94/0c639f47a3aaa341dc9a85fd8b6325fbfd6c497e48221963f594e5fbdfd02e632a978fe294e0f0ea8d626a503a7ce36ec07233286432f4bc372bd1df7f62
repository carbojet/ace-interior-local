{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"E:\\\\novostack\\\\shopify\\\\apps\\\\ns-nextjs-shopify\\\\lib\\\\graphql\\\\AddNewProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation addNewProduct($input: ProductInput!, $media: [CreateMediaInput!]!) {\\n        productCreate(input: $input, media:$media) {\\n            product {\\n                id\\n                title\\n                description\\n                featuredImage {\\n                    id\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks'; //import store from 'store-js';\n\nvar ADD_NEW_PRODUCT = gql(_templateObject());\n\nfunction AddNewProduct(product) {\n  _s();\n\n  var inputs = {\n    title: product.title,\n    descriptionHtml: product.description\n  };\n  var images = [{\n    originalSource: product.image,\n    alt: \"Sample image testing\",\n    mediaContentType: \"IMAGE\"\n  }];\n\n  var _useQuery = useQuery(GET_FIRST_PRODUCTS, {\n    variables: {\n      row: 20\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  console.log('stored products', data.products.edges);\n}\n\n_s(AddNewProduct, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddNewProduct;\nexport default AddNewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewProduct\");","map":{"version":3,"sources":["E:/novostack/shopify/apps/ns-nextjs-shopify/lib/graphql/AddNewProduct.js"],"names":["gql","useQuery","ADD_NEW_PRODUCT","AddNewProduct","product","inputs","title","descriptionHtml","description","images","originalSource","image","alt","mediaContentType","GET_FIRST_PRODUCTS","variables","row","loading","error","data","message","console","log","products","edges"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CACA;;AAGA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;;AAgBA,SAASG,aAAT,CAAwBC,OAAxB,EAAgC;AAAA;;AAC5B,MAAMC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAGF,OAAO,CAACE,KADL;AAEXC,IAAAA,eAAe,EAACH,OAAO,CAACI;AAFb,GAAf;AAIA,MAAMC,MAAM,GAAG,CACX;AACIC,IAAAA,cAAc,EAACN,OAAO,CAACO,KAD3B;AAEIC,IAAAA,GAAG,EAAC,sBAFR;AAGIC,IAAAA,gBAAgB,EAAC;AAHrB,GADW,CAAf;;AAL4B,kBAYGZ,QAAQ,CAACa,kBAAD,EAAqB;AAAEC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP;AAAb,GAArB,CAZX;AAAA,MAYrBC,OAZqB,aAYrBA,OAZqB;AAAA,MAYZC,KAZY,aAYZA,KAZY;AAAA,MAYLC,IAZK,aAYLA,IAZK;;AAa5B,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BH,IAAI,CAACI,QAAL,CAAcC,KAA5C;AACH;;GAhBQrB,a;UAY0BF,Q;;;KAZ1BE,a;AAiBT,eAAeA,aAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n//import store from 'store-js';\r\n\r\n\r\nconst ADD_NEW_PRODUCT = gql`\r\n    mutation addNewProduct($input: ProductInput!, $media: [CreateMediaInput!]!) {\r\n        productCreate(input: $input, media:$media) {\r\n            product {\r\n                id\r\n                title\r\n                description\r\n                featuredImage {\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nfunction AddNewProduct (product){\r\n    const inputs = {\r\n        title : product.title,\r\n        descriptionHtml:product.description\r\n    }\r\n    const images = [\r\n        {\r\n            originalSource:product.image,\r\n            alt:\"Sample image testing\",\r\n            mediaContentType:\"IMAGE\"\r\n        }\r\n    ];\r\n    const {loading, error, data} = useQuery(GET_FIRST_PRODUCTS, { variables: { row: 20 } });\r\n    if (loading) return <div>loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n    console.log('stored products',data.products.edges);    \r\n}\r\nexport default AddNewProduct;"]},"metadata":{},"sourceType":"module"}