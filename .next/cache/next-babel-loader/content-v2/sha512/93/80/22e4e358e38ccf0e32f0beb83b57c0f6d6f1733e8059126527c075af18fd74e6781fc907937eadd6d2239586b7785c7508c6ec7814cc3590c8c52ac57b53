{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"E:/mahendra/shopify app/cj-cps/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"E:\\\\mahendra\\\\shopify app\\\\cj-cps\\\\components\\\\ProductList.js\",\n    _s2 = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($row:Int!){\\n  products(first:$row) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        title\\n        images(first:1){\\n          edges{\\n            node{\\n              id\\n              originalSrc\\n            }\\n          }\\n        }\\n        variants(first:1){\\n          edges{\\n            node{\\n              price\\n            }\\n          }\\n        }\\n        totalInventory\\n      }\\n    }\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, IndexTable, useIndexResourceState } from '@shopify/polaris';\nvar GET_FIRST_PRODUCTS = gql(_templateObject());\n\nfunction ProductList() {\n  _s2();\n\n  var _s = $RefreshSig$(),\n      _this = this;\n\n  var _useQuery = useQuery(GET_FIRST_PRODUCTS, {\n    variables: {\n      row: 20\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this); //console.log('stored products',data.products.edges);\n\n  var products = data.products.edges;\n  var resourceName = {\n    singular: 'Product',\n    plural: 'Products'\n  };\n  useEffect(_s(function (products) {\n    _s();\n\n    var _useIndexResourceStat = useIndexResourceState(products),\n        selectedResources = _useIndexResourceStat.selectedResources,\n        allResourcesSelected = _useIndexResourceStat.allResourcesSelected,\n        handleSelectionChange = _useIndexResourceStat.handleSelectionChange;\n  }, \"aW0OQZVksJPnKWI3ci5XhAmZC1g=\", false, function () {\n    return [useIndexResourceState];\n  }), [selectedResources, allResourcesSelected, handleSelectionChange]);\n  var rowMarkup = customers.map(function (_ref, index) {\n    var id = _ref.id,\n        name = _ref.name,\n        location = _ref.location,\n        orders = _ref.orders,\n        amountSpent = _ref.amountSpent;\n    return /*#__PURE__*/_jsxDEV(IndexTable.Row, {\n      id: id,\n      selected: selectedResources.includes(id),\n      position: index,\n      children: [/*#__PURE__*/_jsxDEV(IndexTable.Cell, {\n        children: /*#__PURE__*/_jsxDEV(TextStyle, {\n          variation: \"strong\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(IndexTable.Cell, {\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(IndexTable.Cell, {\n        children: orders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(IndexTable.Cell, {\n        children: amountSpent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, _this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(IndexTable, {\n      resourceName: resourceName,\n      itemCount: data.products.edges.length,\n      headings: [{\n        title: 'Image'\n      }, {\n        title: 'Title'\n      }, {\n        title: 'Price'\n      }],\n      children: rowMarkup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ProductList, \"VYbJ2PNFRnZLwgQxf4n3HAWwtMU=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["E:/mahendra/shopify app/cj-cps/components/ProductList.js"],"names":["gql","useQuery","Card","IndexTable","useIndexResourceState","GET_FIRST_PRODUCTS","ProductList","variables","row","loading","error","data","message","products","edges","resourceName","singular","plural","useEffect","selectedResources","allResourcesSelected","handleSelectionChange","rowMarkup","customers","map","index","id","name","location","orders","amountSpent","includes","length","title"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Card,IndexTable,useIndexResourceState } from '@shopify/polaris';\r\n\r\n\r\nconst GET_FIRST_PRODUCTS = gql`\r\nquery getProducts($row:Int!){\r\n  products(first:$row) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        title\r\n        images(first:1){\r\n          edges{\r\n            node{\r\n              id\r\n              originalSrc\r\n            }\r\n          }\r\n        }\r\n        variants(first:1){\r\n          edges{\r\n            node{\r\n              price\r\n            }\r\n          }\r\n        }\r\n        totalInventory\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n      hasPreviousPage\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nfunction ProductList(){    \r\n    const {loading, error, data} = useQuery(GET_FIRST_PRODUCTS, { variables: { row: 20 } });\r\n    if (loading) return <div>loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n    //console.log('stored products',data.products.edges);\r\n    const products = data.products.edges\r\n    const resourceName = {\r\n      singular: 'Product',\r\n      plural: 'Products',\r\n    };\r\n    useEffect((products) => {\r\n      const {selectedResources,allResourcesSelected,handleSelectionChange} = useIndexResourceState(products);\r\n    },[selectedResources,allResourcesSelected,handleSelectionChange])\r\n    \r\n    const rowMarkup = customers.map(\r\n      ({id, name, location, orders, amountSpent}, index) => (\r\n        <IndexTable.Row\r\n          id={id}\r\n          key={id}\r\n          selected={selectedResources.includes(id)}\r\n          position={index}\r\n        >\r\n          <IndexTable.Cell>\r\n            <TextStyle variation=\"strong\">{name}</TextStyle>\r\n          </IndexTable.Cell>\r\n          <IndexTable.Cell>{location}</IndexTable.Cell>\r\n          <IndexTable.Cell>{orders}</IndexTable.Cell>\r\n          <IndexTable.Cell>{amountSpent}</IndexTable.Cell>\r\n        </IndexTable.Row>\r\n      ),\r\n    );\r\n    return(\r\n        <Card>\r\n          <IndexTable\r\n            resourceName={resourceName}\r\n            itemCount={data.products.edges.length}\r\n            headings={[\r\n              {title: 'Image'},\r\n              {title: 'Title'},\r\n              {title: 'Price'},\r\n            ]}  \r\n          >\r\n          {rowMarkup}\r\n          </IndexTable>\r\n        </Card>\r\n    )\r\n    \r\n}\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}