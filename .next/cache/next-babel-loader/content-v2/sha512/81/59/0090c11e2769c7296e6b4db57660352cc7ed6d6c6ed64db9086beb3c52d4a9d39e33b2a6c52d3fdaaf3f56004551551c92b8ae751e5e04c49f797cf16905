{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\mahendra\\\\shopify app\\\\cj-cps\\\\components\\\\ProductList.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, IndexTable, useIndexResourceState } from '@shopify/polaris';\nconst GET_FIRST_PRODUCTS = gql`\nquery getProducts($row:Int!){\n  products(first:$row) {\n    edges {\n      cursor\n      node {\n        id\n        title\n        images(first:1){\n          edges{\n            node{\n              id\n              originalSrc\n            }\n          }\n        }\n        variants(first:1){\n          edges{\n            node{\n              price\n            }\n          }\n        }\n        totalInventory\n      }\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n`;\n\nfunction ProductList() {\n  const resourceName = {\n    singular: 'Product',\n    plural: 'Products'\n  };\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_FIRST_PRODUCTS, {\n    variables: {\n      row: 20\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this); //console.log('stored products',data.products.edges);  \n\n  const {\n    selectedResources,\n    allResourcesSelected,\n    handleSelectionChange\n  } = useIndexResourceState(data.products.edges);\n  const rowMarkup = data.products.edges.map(({\n    item\n  }, index) => /*#__PURE__*/_jsxDEV(IndexTable.Row, {\n    id: item.node.id,\n    selected: selectedResources.includes(item.node.id),\n    position: index,\n    children: [/*#__PURE__*/_jsxDEV(IndexTable.Cell, {\n      children: /*#__PURE__*/_jsxDEV(Thumbnail, {\n        source: item.node.images.edges[0] ? item.node.images.edges[0].node.originalSrc : '',\n        alt: item.node.images.edges[0] ? item.node.images.edges[0].node.altText : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(IndexTable.Cell, {\n      children: item.node.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(IndexTable.Cell, {\n      children: item.node.variants.edges[0].node.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, item.node.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(IndexTable, {\n      resourceName: resourceName,\n      itemCount: data.products.edges.length,\n      selectedItemsCount: allResourcesSelected ? 'All' : selectedResources.length,\n      onSelectionChange: handleSelectionChange,\n      headings: [{\n        title: 'Image'\n      }, {\n        title: 'Title'\n      }, {\n        title: 'Price'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\nexport default ProductList;","map":{"version":3,"sources":["E:/mahendra/shopify app/cj-cps/components/ProductList.js"],"names":["gql","useQuery","Card","IndexTable","useIndexResourceState","GET_FIRST_PRODUCTS","ProductList","resourceName","singular","plural","loading","error","data","variables","row","message","selectedResources","allResourcesSelected","handleSelectionChange","products","edges","rowMarkup","map","item","index","node","id","includes","images","originalSrc","altText","title","variants","price","length"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Card,IndexTable,useIndexResourceState } from '@shopify/polaris';\r\n\r\n\r\nconst GET_FIRST_PRODUCTS = gql`\r\nquery getProducts($row:Int!){\r\n  products(first:$row) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        title\r\n        images(first:1){\r\n          edges{\r\n            node{\r\n              id\r\n              originalSrc\r\n            }\r\n          }\r\n        }\r\n        variants(first:1){\r\n          edges{\r\n            node{\r\n              price\r\n            }\r\n          }\r\n        }\r\n        totalInventory\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n      hasPreviousPage\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nfunction ProductList (){\r\n    const resourceName = {\r\n      singular: 'Product',\r\n      plural: 'Products',\r\n    };\r\n    \r\n    const {loading, error, data} = useQuery(GET_FIRST_PRODUCTS, { variables: { row: 20 } });\r\n    if (loading) return <div>loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n    //console.log('stored products',data.products.edges);  \r\n    const {\r\n      selectedResources,\r\n      allResourcesSelected,\r\n      handleSelectionChange,\r\n    } = useIndexResourceState(data.products.edges);\r\n\r\n    const rowMarkup = data.products.edges.map(\r\n      ({item}, index) => (\r\n        <IndexTable.Row\r\n          id={item.node.id}\r\n          key={item.node.id}\r\n          selected={selectedResources.includes(item.node.id)}\r\n          position={index}\r\n        >\r\n          <IndexTable.Cell>\r\n            <Thumbnail \r\n                source={\r\n                    item.node.images.edges[0] ? item.node.images.edges[0].node.originalSrc :''\r\n                }\r\n                alt={\r\n                    item.node.images.edges[0] ? item.node.images.edges[0].node.altText : ''\r\n                }\r\n            />\r\n          </IndexTable.Cell>\r\n          <IndexTable.Cell>{item.node.title}</IndexTable.Cell>\r\n          <IndexTable.Cell>{item.node.variants.edges[0].node.price}</IndexTable.Cell>\r\n        </IndexTable.Row>\r\n      ),\r\n    );\r\n    return(\r\n        <Card>\r\n          <IndexTable\r\n            resourceName={resourceName}\r\n            itemCount={data.products.edges.length}\r\n            selectedItemsCount={\r\n              allResourcesSelected ? 'All' : selectedResources.length\r\n            }\r\n            onSelectionChange={handleSelectionChange}\r\n            headings={[\r\n              {title: 'Image'},\r\n              {title: 'Title'},\r\n              {title: 'Price'},\r\n            ]}  \r\n          >\r\n          </IndexTable>\r\n        </Card>\r\n    )\r\n    \r\n}\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}